<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/WABlob.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/WABlob</TokenIdentifier>
			<Abstract>A class that represents a Windows Azure Blob.</Abstract>
			<DeclaredIn>WABlob.h</DeclaredIn>
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WABlob/name</TokenIdentifier>
			<Abstract>The name of the blob.</Abstract>
			<DeclaredIn>WABlob.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSString *name</Declaration>
			
			
			<Anchor>//api/name/name</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WABlob/URL</TokenIdentifier>
			<Abstract>The address that identifies the blob.</Abstract>
			<DeclaredIn>WABlob.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSURL *URL</Declaration>
			
			
			<Anchor>//api/name/URL</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WABlob/contentData</TokenIdentifier>
			<Abstract>The content data for the blob.</Abstract>
			<DeclaredIn>WABlob.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain) NSData *contentData</Declaration>
			
			
			<Anchor>//api/name/contentData</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WABlob/contentType</TokenIdentifier>
			<Abstract>The content type for the blob.</Abstract>
			<DeclaredIn>WABlob.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSString *contentType</Declaration>
			
			
			<Anchor>//api/name/contentType</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WABlob/DEPRECATED_ATTRIBUTE</TokenIdentifier>
			<Abstract>A WABlobContainer object representing the blob's container.</Abstract>
			<DeclaredIn>WABlob.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/WABlobContainer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>@property (readonly) WABlobContainer *DEPRECATED_ATTRIBUTE</Declaration>
			
			
			<Anchor>//api/name/DEPRECATED_ATTRIBUTE</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WABlob/containerName</TokenIdentifier>
			<Abstract>The container name of the blob.</Abstract>
			<DeclaredIn>WABlob.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSString *containerName</Declaration>
			
			
			<Anchor>//api/name/containerName</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WABlob/metadata</TokenIdentifier>
			<Abstract>The metadata for the container.</Abstract>
			<DeclaredIn>WABlob.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSDictionary *metadata</Declaration>
			
			
			<Anchor>//api/name/metadata</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/WABlob/properties</TokenIdentifier>
			<Abstract>The properties for the blob.</Abstract>
			<DeclaredIn>WABlob.h</DeclaredIn>			
			
			<Declaration>@property (readonly) NSDictionary *properties</Declaration>
			
			
			<Anchor>//api/name/properties</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WABlob/setValue:forMetadataKey:</TokenIdentifier>
			<Abstract>Sets a value to the container metadata dictionary.</Abstract>
			<DeclaredIn>WABlob.h</DeclaredIn>			
			
			<Declaration>- (void)setValue:(NSString *)value forMetadataKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>value</Name>
					<Abstract>The value for the key.</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract>The key for the value.

@discussion Raises an NSInvalidArgumentException if aKey or anObject is nil. If you need to represent a nil value in the dictionary, use NSNull. If aKey already exists in the dictionary, the dictionaryâ€™s previous value object for that key is sent a release message and anObject takes its place.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setValue:forMetadataKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WABlob/removeMetadataForKey:</TokenIdentifier>
			<Abstract>Removes a given key and its associated value from the dictionary.</Abstract>
			<DeclaredIn>WABlob.h</DeclaredIn>			
			
			<Declaration>- (void)removeMetadataForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract>The key to remove.

@discussion Does nothing if key does not exist.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeMetadataForKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WABlob/initBlobWithName:URL:</TokenIdentifier>
			<Abstract>Initializes a newly created WABlob with an name and address URL.</Abstract>
			<DeclaredIn>WABlob.h</DeclaredIn>			
			
			<Declaration>- (id)initBlobWithName:(NSString *)name URL:(NSString *)URL</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract>The name of the blob.</Abstract>
				</Parameter><Parameter>
					<Name>URL</Name>
					<Abstract>The address of the blob.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>The newly initialized WABlob object.</Abstract></ReturnValue>
			<Anchor>//api/name/initBlobWithName:URL:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WABlob/initBlobWithName:URL:container:</TokenIdentifier>
			<Abstract>Initializes a newly created WABlob with a name, address URL and a container.</Abstract>
			<DeclaredIn>WABlob.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/WABlobContainer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (id)initBlobWithName:(NSString *)name URL:(NSString *)URL container:(WABlobContainer *)container</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract>The name of the blob.</Abstract>
				</Parameter><Parameter>
					<Name>URL</Name>
					<Abstract>The address of the blob.</Abstract>
				</Parameter><Parameter>
					<Name>container</Name>
					<Abstract>The container for the blob.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>The newly initialized WABlob object.</Abstract></ReturnValue>
			<Anchor>//api/name/initBlobWithName:URL:container:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WABlob/initBlobWithName:URL:containerName:</TokenIdentifier>
			<Abstract>Initializes a newly created WABlob with a name, address URL and a container.</Abstract>
			<DeclaredIn>WABlob.h</DeclaredIn>			
			
			<Declaration>- (id)initBlobWithName:(NSString *)name URL:(NSString *)URL containerName:(NSString *)containerName</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract>The name of the blob.</Abstract>
				</Parameter><Parameter>
					<Name>URL</Name>
					<Abstract>The address of the blob.</Abstract>
				</Parameter><Parameter>
					<Name>containerName</Name>
					<Abstract>The container name for the blob.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>The newly initialized WABlob object.</Abstract></ReturnValue>
			<Anchor>//api/name/initBlobWithName:URL:containerName:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WABlob/initBlobWithName:URL:container:properties:</TokenIdentifier>
			<Abstract>Initializes a newly created WABlob with a name, address URL, the container and properties.</Abstract>
			<DeclaredIn>WABlob.h</DeclaredIn>			
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/WABlobContainer</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (id)initBlobWithName:(NSString *)name URL:(NSString *)URL container:(WABlobContainer *)container properties:(NSDictionary *)properties</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract>The name of the blob.</Abstract>
				</Parameter><Parameter>
					<Name>URL</Name>
					<Abstract>The address of the blob.</Abstract>
				</Parameter><Parameter>
					<Name>container</Name>
					<Abstract>The container for the blob.</Abstract>
				</Parameter><Parameter>
					<Name>properties</Name>
					<Abstract>The properties for the blob.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>The newly initialized WABlob object.</Abstract></ReturnValue>
			<Anchor>//api/name/initBlobWithName:URL:container:properties:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/WABlob/initBlobWithName:URL:containerName:properties:</TokenIdentifier>
			<Abstract>Initializes a newly created WABlob with a name, address URL, the container and properties.</Abstract>
			<DeclaredIn>WABlob.h</DeclaredIn>			
			
			<Declaration>- (id)initBlobWithName:(NSString *)name URL:(NSString *)URL containerName:(NSString *)containerName properties:(NSDictionary *)properties</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract>The name of the blob.</Abstract>
				</Parameter><Parameter>
					<Name>URL</Name>
					<Abstract>The address of the blob.</Abstract>
				</Parameter><Parameter>
					<Name>containerName</Name>
					<Abstract>The container name for the blob.</Abstract>
				</Parameter><Parameter>
					<Name>properties</Name>
					<Abstract>The properties for the blob.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>The newly initialized WABlob object.</Abstract></ReturnValue>
			<Anchor>//api/name/initBlobWithName:URL:containerName:properties:</Anchor>
		</Token>
		
	</File>
</Tokens>